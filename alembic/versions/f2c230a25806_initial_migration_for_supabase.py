"""Initial migration for Supabase

Revision ID: f2c230a25806
Revises: b6b1af72b34d
Create Date: 2025-09-03 18:13:51.372310

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f2c230a25806'
down_revision: Union[str, Sequence[str], None] = 'b6b1af72b34d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Employees',
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('specialty', sa.Enum('VETERINARIO', 'CUIDADOR', 'PELUQUERO', 'RECEPCIONISTA', 'ADMINISTRATIVO', 'OTRO', name='employeespecialtyenum'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('employee_id')
    )
    op.create_index(op.f('ix_Employees_employee_id'), 'Employees', ['employee_id'], unique=False)
    op.create_table('Service',
    sa.Column('service_id', sa.Integer(), nullable=False),
    sa.Column('lodging', sa.Boolean(), nullable=False),
    sa.Column('service_type', sa.Enum('GUARDERIA', 'TRANSPORTE', 'COMIDA', 'OTROS', name='service_type_enum'), nullable=False),
    sa.Column('other_service', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('base_price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('duration', sa.Time(), nullable=True),
    sa.Column('image_url', sa.Text(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('service_id')
    )
    op.create_table('User',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('phone_number', sa.BigInteger(), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('address', sa.Text(), nullable=False),
    sa.Column('last_update', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_by', sa.String(length=55), nullable=False),
    sa.Column('update_date', sa.TIMESTAMP(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone_number')
    )
    op.create_table('Assignment',
    sa.Column('assignment_id', sa.Integer(), nullable=False),
    sa.Column('service_id', sa.BigInteger(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('assignment_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['Employees.employee_id'], ),
    sa.ForeignKeyConstraint(['service_id'], ['Service.service_id'], ),
    sa.PrimaryKeyConstraint('assignment_id')
    )
    op.create_index(op.f('ix_Assignment_assignment_id'), 'Assignment', ['assignment_id'], unique=False)
    op.create_table('Invoice',
    sa.Column('invoice_id', sa.Integer(), nullable=False),
    sa.Column('service_id', sa.Integer(), nullable=False),
    sa.Column('fiscal_number', sa.String(length=50), nullable=False),
    sa.Column('discounts', sa.Boolean(), nullable=True),
    sa.Column('additional_price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('vat', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('included_services', sa.Enum('BASICO', 'PREMIUM', 'COMPLETO', 'PERSONALIZADO', name='includedservicesenum'), nullable=False),
    sa.Column('completed', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['service_id'], ['Service.service_id'], ),
    sa.PrimaryKeyConstraint('invoice_id')
    )
    op.create_index(op.f('ix_Invoice_invoice_id'), 'Invoice', ['invoice_id'], unique=False)
    op.create_table('Pet',
    sa.Column('pet_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('species', sa.Enum('CANINO', 'FELINO', 'REPTIL', 'ANFIBIO', 'AVE', 'PEZ', 'ROEDOR', 'OTRO', name='pet_type_enum'), nullable=False),
    sa.Column('breed', sa.String(length=100), nullable=False),
    sa.Column('birth_date', sa.Date(), nullable=False),
    sa.Column('allergies', sa.String(length=100), nullable=True),
    sa.Column('special_needs', sa.String(length=100), nullable=True),
    sa.Column('img_url', sa.String(length=100), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ),
    sa.PrimaryKeyConstraint('pet_id')
    )
    op.create_table('Reservation',
    sa.Column('reservation_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('service_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('checkin_date', sa.DateTime(), nullable=False),
    sa.Column('checkout_date', sa.DateTime(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'CONFIRMED', 'CANCELLED', 'COMPLETED', name='reservation_status_enum'), nullable=False),
    sa.Column('internal_notes', sa.String(length=500), nullable=True),
    sa.ForeignKeyConstraint(['service_id'], ['Service.service_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ),
    sa.PrimaryKeyConstraint('reservation_id')
    )
    op.create_table('ActivityLog',
    sa.Column('activity_id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('pet_id', sa.Integer(), nullable=False),
    sa.Column('activity_type', sa.Enum('ALIMENTACION', 'PASEO', 'MEDICACION', 'PELUQUERIA', 'JUEGO', 'ENTRENAMIENTO', 'LIMPIEZA', 'OTRO', name='activitytypeenum'), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('start_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['Employees.employee_id'], ),
    sa.ForeignKeyConstraint(['pet_id'], ['Pet.pet_id'], ),
    sa.PrimaryKeyConstraint('activity_id')
    )
    op.create_index(op.f('ix_ActivityLog_activity_id'), 'ActivityLog', ['activity_id'], unique=False)
    op.create_table('Medical_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pet_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('type', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['pet_id'], ['Pet.pet_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Medical_history_id'), 'Medical_history', ['id'], unique=False)
    op.create_table('Payment',
    sa.Column('payment_id', sa.Integer(), nullable=False),
    sa.Column('invoice_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('payment_method', sa.Enum('TARJETA_CREDITO', 'TARJETA_DEBITO', 'EFECTIVO', 'TRANSFERENCIA', 'BIZUM', 'PAYPAL', name='paymentmethodenum'), nullable=False),
    sa.Column('payment_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('payment_status', sa.Enum('PENDIENTE', 'COMPLETADO', 'FALLIDO', 'CANCELADO', 'REEMBOLSADO', name='paymentstatusenum'), nullable=False),
    sa.Column('refund_processed', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['invoice_id'], ['Invoice.invoice_id'], ),
    sa.PrimaryKeyConstraint('payment_id')
    )
    op.create_index(op.f('ix_Payment_payment_id'), 'Payment', ['payment_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_Payment_payment_id'), table_name='Payment')
    op.drop_table('Payment')
    op.drop_index(op.f('ix_Medical_history_id'), table_name='Medical_history')
    op.drop_table('Medical_history')
    op.drop_index(op.f('ix_ActivityLog_activity_id'), table_name='ActivityLog')
    op.drop_table('ActivityLog')
    op.drop_table('Reservation')
    op.drop_table('Pet')
    op.drop_index(op.f('ix_Invoice_invoice_id'), table_name='Invoice')
    op.drop_table('Invoice')
    op.drop_index(op.f('ix_Assignment_assignment_id'), table_name='Assignment')
    op.drop_table('Assignment')
    op.drop_table('User')
    op.drop_table('Service')
    op.drop_index(op.f('ix_Employees_employee_id'), table_name='Employees')
    op.drop_table('Employees')
    # ### end Alembic commands ###
